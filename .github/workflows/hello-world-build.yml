name: Build Hello World APK

on:
  push:
    branches: [main]
  workflow_dispatch:  # lets you run manually from GitHub

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out your repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # Step 3: Install dependencies
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git zip unzip openjdk-17-jdk python3-pip libffi-dev libssl-dev
        pip install --upgrade pip
        pip install buildozer cython

    # Step 4: Build the APK
    - name: Build APK with Buildozer
      run: |
        buildozer init
        # Overwrite buildozer.spec with minimal working config
        cat <<EOF > buildozer.spec
        [app]
        title = HelloWorld
        package.name = helloworld
        package.domain = org.test
        source.dir = .
        source.include_exts = py,png,jpg,kv,atlas
        version = 0.1
        requirements = python3,kivy
        orientation = portrait
        fullscreen = 1
        android.api = 33
        android.ndk = 25b
        android.arch = armeabi-v7a

        [buildozer]
        log_level = 2
        warn_on_root = 1
        EOF

        # Create a simple Kivy Hello World app
        echo 'from kivy.app import App\nfrom kivy.uix.label import Label\nclass MyApp(App):\n    def build(self):\n        return Label(text="Hello, World!")\n\nMyApp().run()' > main.py

        buildozer android debug

    # Step 5: Upload the generated APK
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: HelloWorld-debug-apk
        path: bin/*.apk
